name: Build and Package Turnip Vulkan Driver

on:
  push:
    branches:
      - main  # Change this to your default branch
  workflow_dispatch:

jobs:
  build-turnip:
    runs-on: ubuntu-latest

    env:
      ndkver: android-ndk-r26c
      sdkver: 31
      mesasrc: https://gitlab.freedesktop.org/mesa/mesa.git

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Prepare Environment
      run: |
        sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
        sudo sed -i 's/^Types: deb$/Types: deb deb-src/g' /etc/apt/sources.list.d/*.sources
        sudo apt update
        sudo apt build-dep mesa -y

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y meson ninja-build patchelf unzip curl python3-pip flex bison zip git ccache
        pip3 install --upgrade pip

    - name: Set Up Work Directory
      run: |
        mkdir -p $GITHUB_WORKSPACE/turnip_workdir
        cd $GITHUB_WORKSPACE/turnip_workdir

    - name: Download and Extract NDK
      run: |
        if [ -z "${ANDROID_NDK_LATEST_HOME}" ]; then
          if [ ! -d android-ndk ]; then
            curl -sSL https://dl.google.com/android/repository/${ndkver}-linux.zip -o ${ndkver}-linux.zip
            unzip -q ${ndkver}-linux.zip
          fi
        else
          echo "Using NDK from environment"
        fi

    - name: Clone Mesa Repository
      run: |
        cd $GITHUB_WORKSPACE/turnip_workdir
        if [ -d mesa ]; then
          rm -rf mesa
        fi
        git clone --depth=1 $mesasrc
        cd mesa
        echo "Mesa cloned at commit $(git rev-parse --short HEAD)"

    - name: Clone and Apply Patches
      run: |
        cd $GITHUB_WORKSPACE/turnip_workdir
        git clone https://github.com/ggsasda/mesa-turnip
        cd mesa
        for patch in $GITHUB_WORKSPACE/turnip_workdir/mesa-turnip/turnip-patches/*.patch; do
          echo "Applying patch $patch"
          git apply "$patch"
        done
        echo "All patches applied successfully."

    - name: Create Meson Cross File
      run: |
        cd $GITHUB_WORKSPACE/turnip_workdir/mesa
        ndk="$GITHUB_WORKSPACE/turnip_workdir/${ndkver}/toolchains/llvm/prebuilt/linux-x86_64/bin"
        cat <<EOF >"android-aarch64"
        [binaries]
        ar = '${ndk}/llvm-ar'
        c = ['ccache', '${ndk}/aarch64-linux-android${{ env.sdkver }}-clang']
        cpp = ['ccache', '${ndk}/aarch64-linux-android${{ env.sdkver }}-clang++', '-fno-exceptions', '-fno-unwind-tables', '-fno-asynchronous-unwind-tables', '-static-libstdc++']
        c_ld = 'lld'
        cpp_ld = 'lld'
        strip = '${ndk}/aarch64-linux-android-strip'
        pkgconfig = ['env', 'PKG_CONFIG_LIBDIR=NDKDIR/pkgconfig', '/usr/bin/pkg-config']
        [host_machine]
        system = 'android'
        cpu_family = 'aarch64'
        cpu = 'armv8'
        endian = 'little'
        EOF

    - name: Build with Meson and Ninja
      run: |
        cd $GITHUB_WORKSPACE/turnip_workdir/mesa
        meson build-android-aarch64 --cross-file android-aarch64 -Dbuildtype=release -Dplatforms=android -Dplatform-sdk-version=${{ env.sdkver }} -Dandroid-stub=true -Dgallium-drivers= -Dvulkan-drivers=freedreno -Dvulkan-beta=true -Dfreedreno-kmds=kgsl -Db_lto=true
        ninja -C build-android-aarch64

    - name: Package with Patchelf and Zip
      run: |
        cd $GITHUB_WORKSPACE/turnip_workdir/mesa/build-android-aarch64/src/freedreno/vulkan
        cp libvulkan_freedreno.so $GITHUB_WORKSPACE/turnip_workdir
        cd $GITHUB_WORKSPACE/turnip_workdir
        patchelf --set-soname vulkan.adreno.so libvulkan_freedreno.so
        mv libvulkan_freedreno.so vulkan.ad07XX.so

        mkdir -p $GITHUB_WORKSPACE/turnip_workdir/turnip_module
        cp vulkan.ad07XX.so $GITHUB_WORKSPACE/turnip_workdir/turnip_module

        cat <<EOF > $GITHUB_WORKSPACE/turnip_workdir/turnip_module/meta.json
        {
          "schemaVersion": 1,
          "name": "Turnip - $(date +'%b %d, %Y') - $(git -C $GITHUB_WORKSPACE/turnip_workdir/mesa rev-parse --short HEAD)",
          "description": "Compiled from Mesa",
          "author": "mesa",
          "packageVersion": "1",
          "vendor": "Mesa",
          "driverVersion": "$(cat $GITHUB_WORKSPACE/turnip_workdir/mesa/VERSION)/vk$(awk -F'COMPLETE VK_MAKE_API_VERSION(|)' '{print $2}' <<< $(cat $GITHUB_WORKSPACE/turnip_workdir/mesa/include/vulkan/vulkan_core.h) | xargs)",
          "minApi": 27,
          "libraryName": "vulkan.ad07XX.so"
        }
        EOF

        zip -9 $GITHUB_WORKSPACE/turnip_build_$(date +'%b-%d-%Y').zip -j $GITHUB_WORKSPACE/turnip_workdir/turnip_module/*

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: Upload meson and ninja logs for debugging
        path: |
          turnip_workdir/ninja_log
          turnip_workdir/mesa/build-android-aarch64/meson-logs/meson-log.txt

    - id: versions
      name: "Get release info"
      run: |
        echo "name=$(cat turnip_workdir/release)" >> "$GITHUB_OUTPUT"
        echo "tag=$(cat turnip_workdir/tag)" >> "$GITHUB_OUTPUT"
        echo "filename=$(cat turnip_workdir/filename)" >> "$GITHUB_OUTPUT"
        echo "patched=$(cat turnip_workdir/patched)" >> "$GITHUB_OUTPUT"

    - name: Release "turnip"
      uses: softprops/action-gh-release@v1
      with:
        body_path: turnip_workdir/description
        name: ${{ steps.versions.outputs.name }}
        tag_name: ${{ steps.versions.outputs.tag }}
        files: |
          turnip_workdir/${{ steps.versions.outputs.filename }}.zip

    - name: Release "turnip" with patched
      if: ${{ contains(steps.versions.outputs.patched, 'true') }}
      uses: softprops/action-gh-release@v1
      with:
        body_path: turnip_workdir/description
        name: ${{ steps.versions.outputs.name }}
        tag_name: ${{ steps.versions.outputs.tag }}
        files: |
          turnip_workdir/${{ steps.versions.outputs.filename }}_patched.zip
